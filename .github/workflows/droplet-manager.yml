name: DigitalOcean Droplet Manager

on:
  # Run automatically at 8:30 AM Vietnam time (GMT+7) every day
  schedule:
    - cron: '30 1 * * *'
  
  # Allow manual trigger from GitHub UI
  workflow_dispatch:
    inputs:
      mode:
        description: 'Operation mode (auto/manual)'
        required: true
        default: 'auto'
        type: choice
        options:
        - auto
        - manual
      operation:
        description: 'Manual operation (only applies when mode=manual)'
        required: false
        default: 'list'
        type: choice
        options:
        - create
        - delete
        - list
      droplet_id:
        description: 'Droplet ID (required for delete operation)'
        required: false
        type: string
      skip_delete:
        description: 'Skip deleting old proxies (only applies to auto mode)'
        required: false
        type: boolean
        default: false

jobs:
  manage-droplet:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y jq curl

    # Auto mode (default)
    - name: Auto Mode - Get existing droplets
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'auto')
      id: get_droplets
      env:
        DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
      run: |
        response=$(curl -s -X GET \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $DO_API_TOKEN" \
          "https://api.digitalocean.com/v2/droplets?tag_name=proxy")
        
        DROPLET_IDS=$(echo $response | jq -r '.droplets[].id' | tr '\n' ' ')
        
        if [ -n "$DROPLET_IDS" ]; then
          echo "droplet_ids=$DROPLET_IDS" >> $GITHUB_OUTPUT
          echo "Found droplets: $DROPLET_IDS"
        else
          echo "No existing proxy droplets found"
          echo "droplet_ids=" >> $GITHUB_OUTPUT
        fi

    - name: Auto Mode - Delete old proxies
      if: (github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'auto')) && steps.get_droplets.outputs.droplet_ids != '' && !github.event.inputs.skip_delete
      env:
        DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
      run: |
        for id in ${{ steps.get_droplets.outputs.droplet_ids }}; do
          echo "Deleting droplet $id..."
          curl -X DELETE \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            "https://api.digitalocean.com/v2/droplets/$id"
          echo "Deleted droplet $id"
        done

    - name: Auto Mode - Create new proxy
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'auto')
      env:
        DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
        PROXY_USER: ${{ secrets.PROXY_USER }}
        PROXY_PASSWORD: ${{ secrets.PROXY_PASSWORD }}
      run: |
        python create_proxy_singapore.py

    # Manual mode
    - name: Manual Mode - Run Operation
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'manual'
      env:
        DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
      run: |
        if [ "${{ github.event.inputs.operation }}" = "create" ]; then
          echo "Creating new droplet..."
          python create_proxy_singapore.py
        elif [ "${{ github.event.inputs.operation }}" = "delete" ]; then
          if [ -z "${{ github.event.inputs.droplet_id }}" ]; then
            echo "Error: droplet_id is required for delete operation"
            exit 1
          fi
          echo "Deleting droplet ${{ github.event.inputs.droplet_id }}..."
          python delete_proxy_singapore.py "${{ github.event.inputs.droplet_id }}"
        else
          echo "Listing all droplets..."
          curl -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            "https://api.digitalocean.com/v2/droplets" | jq .
        fi
